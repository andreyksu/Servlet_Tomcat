<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
	<display-name>ChatBasedOnServlet</display-name>

	<filter>
		<filter-name>firstFilter</filter-name>
		<filter-class>ru.andreyksu.annikonenkov.webapp.filters.FirstFilter</filter-class>
	</filter>

	<filter>
		<filter-name>secondFilter</filter-name>
		<filter-class>ru.andreyksu.annikonenkov.webapp.filters.SecondFilter</filter-class>
	</filter>

	<!-- Порядок вызывов фильтров будет соответствовать порядку(последовательности) 
		описанному в данном файле -->

	<filter-mapping>
		<filter-name>firstFilter</filter-name>
		<servlet-name>mainServlet</servlet-name>
	</filter-mapping>

	<filter-mapping>
		<filter-name>secondFilter</filter-name>
		<servlet-name>mainServlet</servlet-name>
	</filter-mapping>

	<servlet>
		<servlet-name>mainServlet</servlet-name>
		<servlet-class>
			ru.andreyksu.annikonenkov.webapp.servlets.MainServlet
		</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>mainServlet</servlet-name>
		<url-pattern>/chat/*</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<welcome-file-list>
		<welcome-file>loginPage.html</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>404</error-code>
		<location>/err404.html</location>
	</error-page>

	<resource-ref>
		<description>postgreSQL Datasource example</description>
		<!-- Имя по которому будем запрашивать -->
		<res-ref-name>jdbc/postgres</res-ref-name>
		<!-- Тип, возвращаемого ресурса -->
		<res-type>javax.sql.DataSource</res-type>
		<!-- Описываем, кто будет отвечать за авторизацию. В нашем случае контейнер. -->
		<res-auth>Container</res-auth>
	</resource-ref>

</web-app>

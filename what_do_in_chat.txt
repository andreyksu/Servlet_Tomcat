Цель данног проекта/чатика НЕ является сам ЧАТ а целью является попробовать технологий (servlet, JNDI, Mail итд)

	JAVA:
		1. Сделать отправку сообщений mail (smtp)
			1.1. Имеется в виду с приложениями (сохранение сделано - a отправку даже не пробовал)
		2. Привести код в порядок - сейчас по коду совсем печаль (так как делалось из разрада попробовать/много где так и осталось - на уровен кода "попробовать")
			2.0. Разложить по методам.
			2.1. Продумать над применением шаблонов ООП - возможно нужно переделать.
			2.2. Перейти на собственные исключения (продумать их генерацию и их обработку).
			2.3. Продумать работу с конкуретностью (нет ли конкурентного ресурса) итд.
			2.4. Подумать над логгированием (т.е. сейчас оооочень много уровня debug - нужно перевести частично в info а дебаг уровень перестать логгировать).
	*	3. Возможно стоит где-то перейти на WebSocket - опять же, стоит ли?
		4. Сделать и хранить hash а не чистый пароль (возможно стоит два раза на клиенте и на сервере).
		
		По функционалу:
		?	1. Продумать работу с группами/чатами/комнатами
				Создание группы, редактирование группы(список участников, рассыла итд).
		?	2. Продумать работу с удалением сообщений (от имени пользователя - автора)
				Здесь тоже вроде проще, передавать uuid для сообщений а потом просто при попытке удалить передавать этот uuid и обрабатывать отдельным servlet-ом.
			3. Сделать получение пользователей через поиск а не сразу всех.
				3.1. Сделать переключение в виде радио-баттона (два списка "полный" и "список выбранных". Полный, там где можно чекбоксом отметить тех пользователей, что должны появиться в выбранном списке - но это где то нужно хранить).
				3.2. Сделать поиск/фильтр пользователя (здесь первая часть - это просто фильтрация на стороне клиента, вторая часть это с запросом на сервер).
			4. Сделать админку (бан пользователей и возможно еще что-то).
				4.1. По сути это роутинг - и отдельный класс будет - что будет отвечать за администрирование.
			5. При регистрации на сайте - отправлять сообщение на почту, что указана при регистрации с кодом для продолжения авторизации.
				5.1. Здесь вроде все просто - добавить поле в БД для хранения кода.
			6. Сделать загрузку только 30  последних сообщений а при скролле вверх - подгружать старые сообщения.
				6.1. Там по БД все понятно, но будет сортировка обратная - нужно учесть в JS
			7. 

	JS
		1. Привести код в порядок
			1.1. Сделать вынести обращение к элементам и тегам в отдельные переменные итд
			1.2. Пробежаться и просмотреть обработку различных ситуаций.
			1.3. Вероятно сделать некие модельки-классы.
		4. После добавления на стороне сервера комнат/чатов - нужно доработать на стороне клиента.
	*	3. Возможно стоит переделать на WebSocket
		4. После доработки ответов при неудачных кейсах со стороны сервера - сделать обработку ответов на стороне клиента.

	HTML/CSS
		1. Привести стиль страницы в нормальный вид (Bootstrap, Vue.js)
	?	2. На странице регистрации сделать блокировку кнопки пока на клиенте не прошли валидацию поля.
		3. Аналогично сделать валидацию полей на стороне клиента (оставить на стороне сервера но и добавить на клиент)

	Bug
		1. Когда переписка еще свежая, т.е. нет ни одного сообщения и кто-то пишет - то это превое сообщение не отображается. Помогает только переключение между пользователими, после этого прихоидт.
			1.1. Нужно посмотреть, получение времени по сообщениями(ведь их еще нет) и если мы не нашли то получить по екущее время.
			1.2. Проблема на 2020-05-хх так и осталась.

	Общее:
		1. Подготовить инструкцию для деплоя - проверить все на чистой машине
		2. Нарисовать диаграммы - по которым будет понятно как и что работает.
			2.1. Плюс расписать по Servlet - инициализация и дестрой.
			2.2. 
